OpenTURNS developer: what is different from a standard C++ developer?
+ Strong mathematical content
+ Explicit and imperative coding rules
+ Explicit and imperative development process
+ An archite

Various points:
+ should my object be persistent? If yes:
  + implement a public default constructor
  + implement the save/load methods
  + don't forget to call the corresponding methods of the upper class
+ Interface/Implementation pattern
+ For a distribution, be careful to call the computeRange() method in ALL the methods that change the state of the distribution in a way that impact its range!
+ For a NumericalMathFunction don't forget to check that the description of the input and output are present, coherent with the corresponding dimensions, and non ambiguous













































